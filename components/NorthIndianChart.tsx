'use client';

import React from "react";
import { convertLagna } from "@/helpers/convertLagna";

interface Planet {
  name: string;
  rasi?: { name: string } | string;
}

interface Props {
  lagna: any;          // backend ‡§¨‡§æ‡§ü ‡§Ü‡§è‡§ï‡•ã ‡§≤‡§ó‡•ç‡§®‡§ï‡•ã ‡§®‡§æ‡§Æ (string or object)
  planets?: Planet[];
}

// ‡§∞‡§æ‡§∂‡•Ä ‡§®‡§Æ‡•ç‡§¨‡§∞‡§¨‡§æ‡§ü ‡§®‡§æ‡§Æ
const signNames: Record<number, string> = {
  1: "Aries", 2: "Taurus", 3: "Gemini", 4: "Cancer",
  5: "Leo", 6: "Virgo", 7: "Libra", 8: "Scorpio",
  9: "Sagittarius", 10: "Capricorn", 11: "Aquarius", 12: "Pisces",
};

// ‡§∞‡§æ‡§∂‡•Ä‡§ï‡•ã ‡§Æ‡§æ‡§≤‡§ø‡§ï
const signLord: Record<number, string> = {
  1: "‡§Æ‡§Ç‡§ó‡§≤", 2: "‡§∂‡•Å‡§ï‡•ç‡§∞", 3: "‡§¨‡•Å‡§ß", 4: "‡§ö‡§®‡•ç‡§¶‡•ç‡§∞",
  5: "‡§∏‡•Ç‡§∞‡•ç‡§Ø", 6: "‡§¨‡•Å‡§ß", 7: "‡§∂‡•Å‡§ï‡•ç‡§∞", 8: "‡§Æ‡§Ç‡§ó‡§≤",
  9: "‡§ó‡•Å‡§∞‡•Å", 10: "‡§∂‡§®‡§ø", 11: "‡§∂‡§®‡§ø", 12: "‡§ó‡•Å‡§∞‡•Å",
};

// ‡§ò‡§∞‡§ï‡•ã ‡§Ö‡§∞‡•ç‡§•
const houseMeaning: Record<number, string> = {
  1: "‡§∏‡•ç‡§µ‡§≠‡§æ‡§µ, ‡§∂‡§∞‡•Ä‡§∞, ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§§‡•ç‡§µ",
  2: "‡§ß‡§®, ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞, ‡§µ‡§æ‡§£‡•Ä",
  3: "‡§∏‡§æ‡§π‡§∏, ‡§≠‡§æ‡§á‡§¨‡§π‡§ø‡§®‡•Ä",
  4: "‡§ò‡§∞, ‡§Æ‡§æ‡§§‡§æ, ‡§∏‡•Å‡§ñ",
  5: "‡§∏‡§®‡•ç‡§§‡§æ‡§®, ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
  6: "‡§∞‡•ã‡§ó, ‡§ã‡§£, ‡§∂‡§§‡•ç‡§∞‡•Å",
  7: "‡§µ‡§ø‡§µ‡§æ‡§π, ‡§ú‡•ã‡§°‡•Ä‡§¶‡§æ‡§∞",
  8: "‡§Ü‡§Ø‡•Å, ‡§ó‡•Å‡§™‡•ç‡§§ ‡§ï‡•Å‡§∞‡§æ",
  9: "‡§ß‡§∞‡•ç‡§Æ, ‡§≠‡§æ‡§ó‡•ç‡§Ø",
  10: "‡§ï‡§∞‡•ç‡§Æ, ‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞",
  11: "‡§Ü‡§Ø, ‡§Æ‡§ø‡§§‡•ç‡§∞",
  12: "‡§ñ‡§∞‡•ç‡§ö, ‡§µ‡§ø‡§¶‡•á‡§∂",
};

// signMap for planets
const signMap: Record<string, number> = {
  Aries:1,Taurus:2,Gemini:3,Cancer:4,Leo:5,Virgo:6,Libra:7,Scorpio:8,
  Sagittarius:9,Capricorn:10,Aquarius:11,Pisces:12,
  Mesha:1,Vrishabha:2,Mithuna:3,Karkata:4,Simha:5,Kanya:6,Tula:7,Vrischika:8,
  Dhanu:9,Makara:10,Kumbha:11,Meena:12,
  // Nepali
  "‡§Æ‡•á‡§∑":1,"‡§µ‡•É‡§∑‡§≠":2,"‡§Æ‡§ø‡§•‡•Å‡§®":3,"‡§ï‡§∞‡•ç‡§ï‡§ü":4,"‡§∏‡§ø‡§Ç‡§π":5,"‡§ï‡§®‡•ç‡§Ø‡§æ":6,"‡§§‡•Å‡§≤‡§æ":7,"‡§µ‡•É‡§∂‡•ç‡§ö‡§ø‡§ï":8,
  "‡§ß‡§®‡•Å":9,"‡§Æ‡§ï‡§∞":10,"‡§ï‡•Å‡§Æ‡•ç‡§≠":11,"‡§Æ‡•Ä‡§®":12
};

const planetNameMap: Record<string,string> = {
  Sun:"‡§∏‡•Ç‡§∞‡•ç‡§Ø", Moon:"‡§ö‡§®‡•ç‡§¶‡•ç‡§∞", Mars:"‡§Æ‡§Ç‡§ó‡§≤", Mercury:"‡§¨‡•Å‡§ß",
  Jupiter:"‡§ó‡•Å‡§∞‡•Å", Venus:"‡§∂‡•Å‡§ï‡•ç‡§∞", Saturn:"‡§∂‡§®‡§ø", Rahu:"‡§∞‡§æ‡§π‡•Å", Ketu:"‡§ï‡•á‡§§‡•Å", Ascendant:"‡§≤‡§ó‡•ç‡§®"
};

export default function HouseTable({ lagna, planets = [] }: Props) {
  // ‚úÖ Backend ‡§¨‡§æ‡§ü ‡§Ü‡§è‡§ï‡•ã ‡§≤‡§ó‡•ç‡§® ‚Üí ‡§®‡§Æ‡•ç‡§¨‡§∞
  const lagnaNo = convertLagna(lagna);
  console.log("üìå Raw lagna from backend:", lagna);
  console.log("‚úÖ Normalized Lagna No:", lagnaNo);

  // ‚úÖ ‡§≤‡§ó‡•ç‡§®‡§¨‡§æ‡§ü ‡§∏‡•Å‡§∞‡•Å ‡§ó‡§∞‡•á‡§∞ clockwise ‡§ò‡§∞‡§π‡§∞‡•Ç‡§ï‡•ã ‡§ï‡•ç‡§∞‡§Æ
  const houseRasiNumbers: number[] = [];
  for (let i = 0; i < 12; i++) {
    let num = lagnaNo + i;
    if (num > 12) num -= 12;
    houseRasiNumbers.push(num);
  }

  // ‚úÖ ‡§ó‡•ç‡§∞‡§π‡§π‡§∞‡•Ç ‡§ï‡•Å‡§® ‡§ò‡§∞‡§Æ‡§æ ‡§™‡§∞‡•ç‡§õ‡§®‡•ç
  const planetsInHouse: Record<number, string[]> = {};
  for (let i = 1; i <= 12; i++) planetsInHouse[i] = [];

  planets.forEach((p) => {
    const rasiName = typeof p.rasi === "string" ? p.rasi : (p.rasi as any)?.name;
    const rasiNo = signMap[rasiName ?? ""];
    if (rasiNo) {
      const houseIndex = houseRasiNumbers.findIndex((r) => r === rasiNo);
      if (houseIndex >= 0) {
        planetsInHouse[houseIndex + 1].push(planetNameMap[p.name] || p.name);
      }
    }
  });

  return (
    <div className="p-4 my-4 bg-white rounded-md shadow-md text-black">
      <h2 className="text-lg font-bold mb-3">üìù ‡§ó‡•ç‡§∞‡§π‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§§‡§æ‡§≤‡§ø‡§ï‡§æ</h2>
      <div className="overflow-x-auto">
        <table className="min-w-full border border-gray-300 text-sm">
          <thead>
            <tr className="bg-gray-200">
              <th className="border px-2 py-1">‡§ò‡§∞</th>
              <th className="border px-2 py-1">‡§∞‡§æ‡§∂‡•Ä</th>
              <th className="border px-2 py-1">‡§Æ‡§æ‡§≤‡§ø‡§ï ‡§ó‡•ç‡§∞‡§π</th>
              <th className="border px-2 py-1">‡§ó‡•ç‡§∞‡§π‡§π‡§∞‡•Ç</th>
              <th className="border px-2 py-1">‡§Ö‡§∞‡•ç‡§•</th>
            </tr>
          </thead>
          <tbody>
            {houseRasiNumbers.map((rasiNo, idx) => (
              <tr key={idx} className="odd:bg-gray-50">
                <td className="border px-2 py-1 text-center">
                  {idx + 1} {idx === 0 ? "(‡§≤‡§ó‡•ç‡§®)" : ""}
                </td>
                <td className="border px-2 py-1 text-center">
                  {signNames[rasiNo]} ({rasiNo})
                </td>
                <td className="border px-2 py-1 text-center">
                  {signLord[rasiNo]}
                </td>
                <td className="border px-2 py-1 text-center">
                  {planetsInHouse[idx + 1].length > 0
                    ? planetsInHouse[idx + 1].join(", ")
                    : "‚Äî"}
                </td>
                <td className="border px-2 py-1">
                  {houseMeaning[idx + 1]}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}
